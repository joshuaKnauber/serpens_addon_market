{
    "version": 3,
    "name": "Viewport and Render checker",
    "func_name": "sna_viewport_and_render_checker_D2910",
    "inputs": [
        {
            "idname": "SN_ExecuteSocket",
            "name": "Execute",
            "subtype": "NONE"
        },
        {
            "idname": "SN_CollectionPropertySocket",
            "name": "ObjectsCollection",
            "subtype": "NONE"
        },
        {
            "idname": "SN_BooleanSocket",
            "name": "HideViewport",
            "subtype": "NONE"
        },
        {
            "idname": "SN_BooleanSocket",
            "name": "HideRender",
            "subtype": "NONE"
        },
        {
            "idname": "SN_BooleanSocket",
            "name": "Objects",
            "subtype": "NONE"
        },
        {
            "idname": "SN_BooleanSocket",
            "name": "Cameras",
            "subtype": "NONE"
        },
        {
            "idname": "SN_BooleanSocket",
            "name": "Lights",
            "subtype": "NONE"
        }
    ],
    "outputs": [
        {
            "idname": "SN_ExecuteSocket",
            "name": "Execute",
            "subtype": "NONE"
        }
    ],
    "function": "def sna_viewport_and_render_checker_D2910(ObjectsCollection, HideViewport, HideRender, Objects, Cameras, Lights):\n    OBC = ObjectsCollection\n    HideViewport = HideViewport\n    HideRender = HideRender\n    HideObject = Objects\n    HideCameras = Cameras\n    HideLights = Lights\n    counters = None\n    import time\n    # Iterate over all objects in the scene\n    for obj in OBC:\n        # Skip objects that should not be hidden\n        if obj.type == 'MESH' and not HideObject:\n            continue\n        if obj.type == 'CAMERA' and not HideCameras:\n            continue\n        if obj.type == 'LIGHT' and not HideLights:\n            continue\n        # Set the object's visibility to False\n        if HideViewport is False: obj.hide_set(False)\n        if HideRender is False: obj.hide_render= False\n        # Do something with the object\n        if HideViewport: obj.hide_set(True)\n        if HideRender: obj.hide_render = True\n    return",
    "import": "import bpy",
    "imperative": "",
    "register": "",
    "unregister": "",
    "variables": [],
    "properties": [],
    "variable_defs": {},
    "properties_defs": {}
}